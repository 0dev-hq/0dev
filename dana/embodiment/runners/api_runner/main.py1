from core.answer_handler import AnswerHandler
from core.interactive_agent import InteractiveAgent
from core.internal_code_generator import InternalCodeGenerator
from core.local_code_executor import LocalCodeExecutor
from core.navigator import Navigator
from core.perception_handler import PerceptionHandler
from core.postgres_history_manager import PostgresHistoryManager
from core.step_handler import StepHandler
from embodiment.runners.api_runner.api_runner import APIRunner
from core.llms.openai import OpenAIClient
import os
from dotenv import load_dotenv

load_dotenv()

if __name__ == "__main__":
    # Initialize dependencies
    llm_client = OpenAIClient(api_key=os.getenv("OPENAI_API_KEY"))

    navigator = Navigator(llm_client)
    history_manager = PostgresHistoryManager(llm_client)
    code_generator = InternalCodeGenerator(llm_client)
    code_executor = LocalCodeExecutor()
    perception_handler = PerceptionHandler(llm_client)
    answer_handler = AnswerHandler(llm_client)
    step_handler = StepHandler(
        code_generator=code_generator,
        history_manager=history_manager,
        perception_handler=perception_handler,
        code_executor=code_executor,
        answer_handler=answer_handler,
    )

    # Initialize the runner with the agent
    runner = APIRunner(
        agent_class=InteractiveAgent,
        agent_config={
            "id": "1",
            "account_id": "123",
            "name": "MyInteractiveAgent",
            "intents": [
                "Answer any questions about emails, the technology used, and the process.",
                "Give the list of files in the source bucket to the user."
                "Send an email with the files from the source that the user specifies to the recipient.",
            ],
            "facts": [
                "The source bucket is an S3 bucket named '0dev-test-source-bucket'.",
            ],
            "policies": [
                "If a file's name starts with internal, don't send it in the email.",
            ],
            "navigator": navigator,
            "step_handler": step_handler,
            "history_manager": history_manager,
        },
    )
    runner.run()
